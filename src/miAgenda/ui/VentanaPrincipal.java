/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package miAgenda.ui;

import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import miAgenda.modelo.Contacto;
import miAgenda.servicio.ContactoServicio;

/**
 *
 * @author Ben
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        DefaultTableModel modelo = new DefaultTableModel(// crear modelo de tabla para contactos
        new Object[][]{},
        new String[]{"ID", "Nombres", "Apellidos", "Teléfono", "Email", "Dirección", "Etiqueta"});
        tablaContactos.setModel(modelo);
        
        // Habilitar filtrado
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelo);
    tablaContactos.setRowSorter(sorter);
    
    // Cargar los contactos desde la base de datos
    cargarContactos();
    }
    // metodo para cargar los contactos a la tabla
    private void cargarContactos() {
    DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
    modelo.setRowCount(0); // Limpia la tabla

    ContactoServicio servicio = new ContactoServicio();
    for (Contacto c : servicio.listarContactos()) {
        modelo.addRow(new Object[]{
            c.getId(),
            c.getNombres(),
            c.getApellidos(),
            c.getTelefono(),
            c.getEmail(),
            c.getDireccion(),
            c.getEtiqueta()
        });
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaContactos = new javax.swing.JTable();
        btnNuevoContacto = new javax.swing.JButton();
        btnEditarUsuario = new javax.swing.JButton();
        btnEliminarUsuario = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        btnVerEventos = new javax.swing.JButton();
        btnAgregarEvento = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        tablaContactos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaContactos);

        btnNuevoContacto.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnNuevoContacto.setText("Agregar Usuario");
        btnNuevoContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoContactoActionPerformed(evt);
            }
        });

        btnEditarUsuario.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnEditarUsuario.setText("Editar Usuario");
        btnEditarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarUsuarioActionPerformed(evt);
            }
        });

        btnEliminarUsuario.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnEliminarUsuario.setText("Eliminar Usuario");
        btnEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUsuarioActionPerformed(evt);
            }
        });

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        btnVerEventos.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnVerEventos.setText("Ver Eventos");
        btnVerEventos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerEventosActionPerformed(evt);
            }
        });

        btnAgregarEvento.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAgregarEvento.setText("Agregar Eventos");
        btnAgregarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarEventoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Filtrado de Usuarios:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNuevoContacto)
                        .addGap(27, 27, 27)
                        .addComponent(btnEditarUsuario)
                        .addGap(27, 27, 27)
                        .addComponent(btnEliminarUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAgregarEvento)
                .addGap(18, 18, 18)
                .addComponent(btnVerEventos)
                .addGap(168, 168, 168))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevoContacto)
                    .addComponent(btnEditarUsuario)
                    .addComponent(btnEliminarUsuario)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVerEventos)
                    .addComponent(btnAgregarEvento))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoContactoActionPerformed
         DialogoContacto dialogo = new DialogoContacto(this, true);// accion para agregar un nuevo contacto

          dialogo.setLocationRelativeTo(this);
          dialogo.setVisible(true);
          cargarContactos(); // Para actualizar tabla después de cerrar el diálogo
    }//GEN-LAST:event_btnNuevoContactoActionPerformed

    private void btnEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUsuarioActionPerformed
        int fila = tablaContactos.getSelectedRow();// accion para eliminar un contacto seleccionado

    if (fila == -1) {
        JOptionPane.showMessageDialog(this, "Por favor selecciona un contacto a eliminar.");
        return;
    }

    int id = (int) tablaContactos.getValueAt(fila, 0); // columna 0 = ID

    int confirm = JOptionPane.showConfirmDialog(this,
        "¿Estás seguro de que deseas eliminar este contacto?",
        "Confirmar eliminación",
        JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        ContactoServicio servicio = new ContactoServicio();
        if (servicio.eliminarContacto(id)) {
            JOptionPane.showMessageDialog(this, "Contacto eliminado correctamente.");
            cargarContactos();
        } else {
            JOptionPane.showMessageDialog(this, "Error al eliminar el contacto.");
        }
    }
    }//GEN-LAST:event_btnEliminarUsuarioActionPerformed

    private void btnEditarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarUsuarioActionPerformed
        int fila = tablaContactos.getSelectedRow(); // accion para editar un contacto seleccionado
    if (fila == -1) {
        JOptionPane.showMessageDialog(this, "Selecciona un contacto para editar.");
        return;
    }

    Contacto c = new Contacto();
    c.setId((int) tablaContactos.getValueAt(fila, 0));
    c.setNombres((String) tablaContactos.getValueAt(fila, 1));
    c.setApellidos((String) tablaContactos.getValueAt(fila, 2));
    c.setTelefono((String) tablaContactos.getValueAt(fila, 3));
    c.setEmail((String) tablaContactos.getValueAt(fila, 4));
    c.setDireccion((String) tablaContactos.getValueAt(fila, 5));
    c.setEtiqueta((String) tablaContactos.getValueAt(fila, 6));

    DialogoContacto dialogo = new DialogoContacto(this, true);
    dialogo.cargarContacto(c); // ← Aquí enviamos el contacto a editar
    dialogo.setLocationRelativeTo(this);
    dialogo.setVisible(true);

    cargarContactos(); // Recarga la tabla al cerrar
    }//GEN-LAST:event_btnEditarUsuarioActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
    String texto = txtBuscar.getText();
    TableRowSorter sorter = (TableRowSorter) tablaContactos.getRowSorter();
    
    if (texto.trim().length() == 0) {
        sorter.setRowFilter(null); // Sin filtro
    } else {
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + texto)); // Filtrado case-insensitive
    }
    }//GEN-LAST:event_txtBuscarKeyReleased
// accion para abrir ventana de agregar evento
    private void btnAgregarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarEventoActionPerformed
       DialogoEvento dialogoEvento = new DialogoEvento(this,true);
       dialogoEvento.setLocationRelativeTo(this);
       dialogoEvento.setVisible(true);
    }//GEN-LAST:event_btnAgregarEventoActionPerformed
// accion para ver lista de eventos
    private void btnVerEventosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerEventosActionPerformed
         // Abrir la ventana para ver y agregar eventos
    VentanaEventos venEve = new VentanaEventos(this,true);
    venEve.setLocationRelativeTo(this);  // Centrar la ventana
    venEve.setVisible(true);  // Hacer visible la ventana

    }//GEN-LAST:event_btnVerEventosActionPerformed

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarEvento;
    private javax.swing.JButton btnEditarUsuario;
    private javax.swing.JButton btnEliminarUsuario;
    private javax.swing.JButton btnNuevoContacto;
    private javax.swing.JButton btnVerEventos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaContactos;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
